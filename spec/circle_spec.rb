require 'circle'

describe Circle do

  before :each do
    @circle = Circle.new(5)
  end

  it "says 'hello'when poked" do
    @circle.poke.should == 'hello'
  end

  [ 1, 10, 0.887].each do |r|
    it "initializes with a raidus of #{r}" do
      @circle2 = Circle.new(r)
      @circle2.radius.should == r
    end
  end

  it "should initialize with the absolute value of a negative radius" do
    @circle3 = Circle.new(-5)
    @circle3.radius.should == 5
  end

  it "should return the circles area" do
    @circle.area.should == (Math::PI)*5*5
  end

  it "should generate a random decimal between -1 and 1" do
    (-1..1).should cover(@circle.get_rand)
  end

  it "should multiply the result of get_rand by a number generated by a rand() call to it's radius and assign it to 'x'." do
    (-@circle.radius..@circle.radius).should cover @circle.x_point
  end 

  it "should create a new point" do
    @circle.point.should be_true
  end

  it "should calculate the chord height from the x_point" do
    @circle.y_chord_length.should == 2*sqrt((@circle.radius*@circle.radius)-(@circle.d*@circle.d))
  end 



end 